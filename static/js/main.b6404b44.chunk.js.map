{"version":3,"sources":["pages/Home.js","services/firebase.js","pages/Chat.js","helpers/auth.js","pages/Signup.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","database","Chat","props","state","user","currentUser","chats","content","readError","writeError","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","ref","push","timestamp","Date","now","uid","message","on","snapshot","forEach","snap","val","error","className","map","chat","onSubmit","onChange","type","email","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","SignUp","password","name","createUserWithEmailAndPassword","Login","googleSignIn","alert","signInWithEmailAndPassword","PrivateRoute","component","authenticated","rest","render","to","pathname","from","location","PublicRoute","App","loading","onAuthStateChanged","basename","process","exact","path","Signup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6404b44.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n import { Link } from 'react-router-dom';\nexport default class Home extends Component {\n  render() {\n    return (\n       <div>\n          \n       </div>\n    );\n  }\n}","import firebase from 'firebase';\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBtw4kFOO45194cCWv3w-_GyRS5MBa1OAw\",\n    authDomain: \"chat-bot-7447e.firebaseapp.com\",\n    databaseURL: \"https://chat-bot-7447e-default-rtdb.firebaseio.com\",\n    projectId: \"chat-bot-7447e\",\n    storageBucket: \"chat-bot-7447e.appspot.com\",\n    messagingSenderId: \"925702082431\",\n    appId: \"1:925702082431:web:67ba19f60168b92c85144a\",\n    measurementId: \"G-DTSFJR2J61\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  export const auth = firebase.auth;\n  export const db = firebase.database();","import React, { Component } from \"react\";\nimport { auth } from \"../services/firebase\";\nimport { db } from \"../services/firebase\"\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      chats: [],\n      content: '',\n      readError: null,\n      writeError: null\n    };\n   this.handleChange = this.handleChange.bind(this);\n   this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n\t  this.setState({\n\t    content: event.target.value\n\t  });\n  }\n  async handleSubmit(event) {\n\t  event.preventDefault();\n\t  this.setState({ writeError: null });\n\t  try {\n\t    await db.ref(\"chats\").push({\n\t      content: this.state.content,\n\t      timestamp: Date.now(),\n\t      uid: this.state.user.uid\n\t    });\n\t    this.setState({ content: '' });\n\t  } catch (error) {\n\t    this.setState({ writeError: error.message });\n\t  }\n}\n  async componentDidMount() {\n    this.setState({ readError: null });\n    try {\n      db.ref(\"chats\").on(\"value\", snapshot => {\n        let chats = [];\n        snapshot.forEach((snap) => {\n          chats.push(snap.val());\n        });\n        this.setState({ chats });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n  render() {\n  return (\n    <div>\n      <div className=\"chats\">\n        {this.state.chats.map(chat => {\n          return <p key={chat.timestamp}>{chat.content}</p>\n        })}\n      </div>\n      # message form #\n      <form onSubmit={this.handleSubmit}>\n        <input onChange={this.handleChange} value={this.state.content}></input>\n        {this.state.error ? <p>{this.state.writeError}</p> : null}\n        <button type=\"submit\">Send</button>\n      </form>\n      <div>\n        Login in as: <strong>{this.state.user.email}</strong>\n      </div>\n    </div>\n  );\n }\n}","import { auth } from \"../services/firebase\";\n\nexport function signup(email, password) {\n  return auth().createUserWithEmailAndPassword(email, password);\n}\n \n\nexport function signin(email, password) {\n  return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function signInWithGoogle() {\n  const provider = new auth.GoogleAuthProvider();\n  return auth().signInWithPopup(provider);\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { signup } from '../helpers/auth';\n \nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      email: '',\n      password: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n }\n\n handleChange(event) {\n  this.setState({\n    [event.target.name]: event.target.value\n  });\n}\n\nasync handleSubmit(event) {\n  event.preventDefault();\n  this.setState({ error: '' });\n  try {\n    await signup(this.state.email, this.state.password);\n  } catch (error) {\n    this.setState({ error: error.message });\n  }\n}\n \n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h1>\n            Sign Up to\n          <Link to=\"/\">Chatty</Link>\n          </h1>\n          <p>Fill in the form below to create an account.</p>\n          <div>\n            <input placeholder=\"Email\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email}></input>\n          </div>\n          <div>\n            <input placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\"></input>\n          </div>\n          <div>\n            {this.state.error ? <p>{this.state.error}</p> : null}\n            <button type=\"submit\">Sign up</button>\n          </div>\n          <hr></hr>\n          <p>Already have an account? <Link to=\"/login\">Login</Link></p>\n        </form>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signin, signInWithGoogle } from \"../helpers/auth\";\n \nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      email: \"\",\n      password: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.googleSignIn = this.googleSignIn.bind(this);\n  }\n \n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n\n  async googleSignIn() {\n    try {\n      debugger;\n      await signInWithGoogle();\n    } catch (error) {\n      alert(\"ghj\")\n      this.setState({ error: error.message });\n    }\n  }\n \n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ error: \"\" });\n    try {\n      await signin(this.state.email, this.state.password);\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n \n  render() {\n    return (\n      <div>\n        <form\n          autoComplete=\"off\"\n          onSubmit={this.handleSubmit}\n        >\n          <h1>\n            Login to\n            <Link to=\"/\">\n              Chatty\n            </Link>\n          </h1>\n          <p>\n            Fill in the form below to login to your account.\n          </p>\n          <div>\n            <input\n              placeholder=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            />\n          </div>\n          <div>\n            <input\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n              type=\"password\"\n            />\n          </div>\n          <div>\n            {this.state.error ? (\n              <p>{this.state.error}</p>\n            ) : null}\n            <button type=\"submit\">Login</button>\n          </div>\n          <hr />\n          <p>\n            Don't have an account? <Link to=\"/signup\">Sign up</Link>\n          </p>\n        </form>\n         <p>Or</p>\n          <button onClick={this.googleSignIn} type=\"button\">\n            Sign up with Google\n          </button>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport {\n  Route,\n  BrowserRouter,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Chat from './pages/Chat';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport { auth } from './services/firebase';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => authenticated === true\n        ? <Component {...props} />\n        : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => authenticated === false\n        ? <Component {...props} />\n        : <Redirect to='/chat' />}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true,\n    };\n  }\n  componentDidMount() {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false,\n        });\n      }\n    })\n  }\n  render(){\n     return this.state.loading === true ? <h2>Loading...</h2> : (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Route render = {({ location }) => (\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <PrivateRoute path=\"/chat\" authenticated={this.state.authenticated} component={Chat}></PrivateRoute>\n          <PublicRoute path=\"/signup\" authenticated={this.state.authenticated} component={Signup}></PublicRoute>\n          <PublicRoute path=\"/login\" authenticated={this.state.authenticated} component={Login}></PublicRoute>\n        </Switch>\n      )} />\n      </BrowserRouter>);\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}